{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setQuery","setMovies","useState","setMovie","fault","setFault","loading","setLoading","getMovieData","queryArg","a","response","movieData","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","undefined","classNames","onClick","preventDefault","disabled","length","movieArg","some","addedMovie","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08152ca6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=aa46991e';\n\n// eslint-disable-next-line max-len\nexport const defaultPicture = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import './FindMovie.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie, defaultPicture } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  query, setQuery, setMovies, movies,\n}) => {\n  const [movie, setMovie] = useState<Movie>();\n  const [fault, setFault] = useState<ResponseError>();\n  const [loading, setLoading] = useState(false);\n\n  const makeMovie = (movieData: MovieData) => (setMovie({\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: movieData.Poster === 'N/A' ? defaultPicture : movieData.Poster,\n    imdbUrl: 'https://www.imdb.com/title/',\n    imdbId: movieData.imdbID,\n  }));\n\n  const getMovieData = async (queryArg: string) => {\n    try {\n      setLoading(true);\n      const response = await getMovie(queryArg);\n\n      if ('Response' in response && response.Response === 'False') {\n        throw new Error(response.Error);\n      } else {\n        makeMovie(response as MovieData);\n      }\n    } catch (error) {\n      setFault(error as ResponseError);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddMovie = (movieArg: Movie) => {\n    const isMovieAlreadyAdded = movies.some(\n      (addedMovie) => addedMovie.imdbId === movieArg.imdbId,\n    );\n\n    if (isMovieAlreadyAdded) {\n      return;\n    }\n\n    setMovies([...movies, movieArg]);\n    setMovie(undefined);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setFault(undefined);\n              }}\n            />\n          </div>\n\n          <p className=\"help is-danger\" data-cy=\"errorMessage\">\n            {fault && \"Can't find a movie with such a title\"}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button', 'is-light', { 'is-loading': loading },\n              )}\n              onClick={(event) => {\n                event.preventDefault();\n                getMovieData(query);\n              }}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          setQuery={setQuery}\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}